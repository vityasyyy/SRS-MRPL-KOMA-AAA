@misc{Noy2001,
   abstract = {Ontologies have become core components of many large applications yet the training material has not kept pace with the growing interest. This paper addresses the issues of why one would build an ontology and presents a methodology for creating ontologies based on declarative knowledge representation systems. It leverages the two authors experiences building and maintaining ontologies in a number of ontology environments including Protege-2000, Ontolingua, and Chimaera. It presents the methodology by example utilizing a tutorial wines knowledge base example. While it is aimed at users of frame-based systems, it can be useful for building ontologies in any object-centered system.},
   author = {Natalya F. Noy and Deborah L. McGuinness},
   doi = {10.1016/j.artmed.2004.01.014},
   issn = {09333657},
   journal = {Stanford Knowledge Systems Laboratory},
   title = {Ontology Development 101: A Guide to Creating Your First Ontology},
   year = {2001},
}
@article{Che2006,
   abstract = {The development of the Semantic Web, with machine-readable content, has the potential to revolutionize the World Wide Web and its use. A Semantic Web Primer provides an introduction and guide to this emerging field, describing its key ideas, languages, and technologies. Suitable for use as a textbook or for self-study by professionals, it concentrates on undergraduate-level fundamental concepts and techniques that will enable readers to proceed with building applications on their own. It includes exercises, project descriptions, and annotated references to relevant online materials. A Semantic Web Primer is the only available book on the Semantic Web to include a systematic treatment of the different languages (XML, RDF, OWL, and rules) and technologies (explicit metadata, ontologies, and logic and inference) that are central to Semantic Web development. The book also examines such crucial related topics as ontology engineering and application scenarios. After an introductory chapter, topics covered in succeeding chapters include XML and related technologies that support semantic interoperability; RDF and RDF Schema, the standard data model for machine-processable semantics; and OWL, the W3C-approved standard for a Web ontology language more extensive than RDF Schema; rules, both monotonic and nonmonotonic, in the framework of the Semantic Web; selected application domains and how the Semantic Web would benefit them; the development of ontology-based systems; and current debates on key issues and predictions for the future.},
   author = {Haoyang Che},
   doi = {10.1002/asi.20368},
   issn = {1532-2882},
   issue = {8},
   journal = {Journal of the American Society for Information Science and Technology},
   title = {A Semantic Web primer},
   volume = {57},
   year = {2006},
}
@article{Hommeaux2008,
   abstract = {RDF is a directed, labeled graph data format for representing information in the Web. This specification defines the syntax and semantics of the SPARQL query language for RDF. SPARQL can be used to express queries across diverse data sources, whether the data is stored natively as RDF or viewed as RDF via middleware. SPARQL contains capabilities for querying required and optional graph patterns along with their conjunctions and disjunctions. SPARQL also supports extensible value testing and constraining queries by source RDF graph. The results of SPARQL queries can be results sets or RDF graphs.},
   author = {Eric Prud Hommeaux and Andy Seaborne},
   journal = {W3C Recommendation, \url\{http://www.w3.org/TR/rdf-sparql-query/\}},
   title = {SPARQL Query Language for RDF},
   year = {2008},
}
@article{Hitzler2012,
   abstract = {The OWL 2 Web Ontology Language, informally OWL 2, is an ontology language for the Semantic Web with formally defined meaning. OWL 2 ontologies provide classes, properties, individuals, and data values and are stored as Semantic Web documents. OWL 2 ontologies can be used along with information written in RDF, and OWL 2 ontologies themselves are primarily exchanged as RDF documents. The OWL 2 Document Overview describes the overall state of OWL 2, and should be read before other OWL 2 documents. This primer provides an approachable introduction to OWL 2, including orientation for those coming from other disciplines, a running example showing how OWL 2 can be used to represent first simple information and then more complex information, how OWL 2 manages ontologies, and finally the distinctions between the various sublanguages of OWL 2.},
   author = {Pascal Hitzler and Bijan Parsia and Peter F Patel-schneider and Nuance Communications and Sebastian Rudolph},
   issue = {December},
   journal = {World Wide Web Internet And Web Information Systems},
   title = {OWL 2 Web Ontology Language Primer ( Second Edition )},
   year = {2012},
}
@misc{Cyganiak2014,
   abstract = {The Resource Description Framework (RDF) is a framework for representing information in the Web. This document defines an abstract syntax (a data model) which serves to link all RDF-based languages and specifications. The abstract syntax has two key data structures: RDF graphs are sets of subject-predicate-object triples, where the elements may be IRIs, blank nodes, or datatyped literals. They are used to express descriptions of resources. RDF datasets are used to organize collections of RDF graphs, and comprise a default graph and zero or more named graphs. RDF 1.1 Concepts and Abstract Syntax also introduces key concepts and terminology, and discusses datatyping and the handling of fragment identifiers in IRIs within RDF graphs.},
   author = {Richard Cyganiak and David Wood and Markus Lanthaler},
   journal = {W3C Recommendation},
   title = {RDF 1.1 Concepts and Abstract Syntax},
   year = {2014},
}
@article{W3C2007,
   abstract = {XML is a versatile markup language, capable of labeling the information content of diverse data sources including structured and semi-structured documents, relational databases, and object repositories. A query language that uses the structure of XML intelligently can express queries across all these kinds of data, whether physically stored in XML or viewed as XML via middleware. This specification describes a query language called XQuery, which is designed to be broadly applicable across many types of XML data sources.},
   author = {W3C},
   journal = {W3C, \url\{http://www.w3.org/TR/2007/REC-xquery-20070123/\}},
   title = {XQuery 1.0: An XML Query Language},
   year = {2007},
}
@article{Paoli2004,
   abstract = {The Extensible Markup Language (XML) is a subset of SGML that is completely described in this document. Its goal is to enable generic SGML to be served, received, and processed on the Web in the way that is now possible with HTML. XML has been designed for ease of implementation and for interoperability with both SGML and HTML.},
   author = {Jean Paoli and CM Sperberg-McQueen},
   issn = {0039-9450},
   issue = {November 2008},
   journal = {W3C Recommendation},
   title = {Extensible Markup Language ( XML ) 1.0},
   volume = {0},
   year = {2004},
}
@book{Harold2004,
   abstract = {If you're a developer working with XML, you know there's a lot to know about XML, and the XML space is evolving almost moment by moment. But you don't need to commit every XML syntax, API, or XSLT transformation to memory; you only need to know where to find it. And if it's a detail that has to do with XML or its companion standards, you'll find it--clear, concise, useful, and well-organized--in the updated third edition of XML in a Nutshell. With XML in a Nutshell beside your keyboard, you'll be able to: Quick-reference syntax rules and usage examples for the core XML technologies, including XML, DTDs, Xpath, XSLT, SAX, and DOM Develop an understanding of well-formed XML, DTDs, namespaces, Unicode, and W3C XML Schema Gain a working knowledge of key technologies used for narrative XML documents such as web pages, books, and articles technologies like XSLT, Xpath, Xlink, Xpointer, CSS, and XSL-FO Build data-intensive XML applicationsUnderstand the tools and APIs necessary to build data-intensive XML applications and process XML documents, including the event-based Simple API for XML (SAX2) and the tree-oriented Document Object Model (DOM) This powerful new edition is the comprehensive XML reference. Serious users of XML will find coverage on just about everything they need, from fundamental syntax rules, to details of DTD and XML Schema creation, to XSLT transformations, to APIs used for processing XML documents. XML in a Nutshell also covers XML 1.1, as well as updates to SAX2 and DOM Level 3 coverage. If you need explanation of how a technology works, or just need to quickly find the precise syntax for a particular piece, XML in a Nutshell puts the information at your fingertips. Simply put, XML in a Nutshell is the critical, must-have reference for any XML developer.},
   author = {Elliotte Harold and Scott Means},
   journal = {XML in a Nutshell, 3rd Edition},
   title = {XML in a Nutshell},
   year = {2004},
}
@book{,
   abstract = {applicability for this approach.},
   doi = {10.1007/978-3-540-92913-0},
   journal = {Handbook of Semantic Web Technologies},
   title = {Handbook of Semantic Web Technologies},
   year = {2011},
}
@book{Allemang2008,
   abstract = {The promise of the Semantic Web to provide a universal medium to exchange data information and knowledge has been well publicized. There are many sources too for basic information on the extensions to the WWW that permit content to be expressed in natural language yet used by software agents to easily find, share and integrate information. Until now individuals engaged in creating ontologies-- formal descriptions of the concepts, terms, and relationships within a given knowledge domain-- have had no sources beyond the technical standards documents. Semantic Web for the Working Ontologist transforms this information into the practical knowledge that programmers and subject domain experts need. Authors Allemang and Hendler begin with solutions to the basic problems, but don’t stop there: they demonstrate how to develop your own solutions to problems of increasing complexity and ensure that your skills will keep pace with the continued evolution of the Semantic Web.},
   author = {Dean Allemang and James Hendler},
   doi = {10.1016/B978-0-12-373556-0.X0001-9},
   journal = {Semantic Web for the Working Ontologist: Effective Modeling in RDFS and OWL},
   title = {Semantic Web for the Working Ontologist: Effective Modeling in RDFS and OWL},
   year = {2008},
}
@article{,
   abstract = {Comprehensive guide to information retrieval by leading international experts including web retrievel, web crawling, open source search engines and user interfaces.},
   doi = {10.5860/choice.48-6950},
   issn = {0009-4978},
   issue = {12},
   journal = {Choice Reviews Online},
   title = {Modern information retrieval: the concepts and technology behind search},
   volume = {48},
   year = {2011},
}
@article{,
   abstract = {The World Wide Web's explosion onto the global scene is one of the most dramatic arrivals of technology in history. Consequently, myths and misconceptions about the origins, impact and future of this technology have run wild. Now, for the first time, the world hears from the man who invented the WWW. English computer scientist Tim Berners-Lee quietly laid the groundwork for the WWW (and consequently Hypertext) in 1980, created a prototype in 1990, and unleashed it to the public in 1991. Now the Head of the Worldwide Web Consortium that oversees the WWW's growth, Berners-Lee provides in this book the inside truth about where the WWW came from and the remarkable discoveries that made it the platform to today's communications revolution. He also offers an important analysis of the future development of the WWW, and the likely impact on business and society. Berners-Lee was recently described in The Observer as the man 'who invented the future, who created something which one day will be bigger than all the other industries on earth'.},
   author = {Tim Berners-Lee},
   doi = {10.5860/choice.37-3934},
   issn = {0009-4978},
   issue = {07},
   journal = {Choice Reviews Online},
   title = {Weaving the Web: the original design and ultimate destiny of the World Wide Web by its inventor},
   volume = {37},
   year = {2000},
}
